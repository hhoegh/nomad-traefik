{{- $service:=string "service" .Vars -}}
{{- $dockerTag:=string "docker.Tag" .Vars -}}
{{- $dockerImage:=string "docker.Image" .Vars -}}

{{- $nomad:=get "nomad" .Vars -}}
{{- $region:=string "nomad.region" .Vars -}}
{{- $datacenter:=string "nomad.datacenter" .Vars -}}
{{- $type:=string "nomad.type" .Vars -}}

{{- $resources:=get "resources" .Vars -}}
{{- $cpu:=get "resources.cpu" .Vars -}}
{{- $mem:=get "resources.memory" .Vars -}}

{{- $config:=string "config" .Vars -}}
{{- $source:=string "config.source" .Vars -}}
{{- $destination:=string "config.destination" .Vars -}}

job "{{ $service }}" {
  region      = "{{ $region }}"
  datacenters = ["{{ $datacenter }}"]
  type        = "{{ $type }}"

  constraint {
    attribute = "${meta.type}"
    value     = "server"
  }

  group "traefik" {
    count = 1

    network {
      port "http" {
        static = 8080
      }
      port "https" {
        static = 443
      }
      port "api" {
        static = 8081
      }
    }

    service {
      name = "traefik"

      check {
        name     = "alive"
        type     = "tcp"
        port     = "http"
        interval = "10s"
        timeout  = "2s"
      }
    }

    task "traefik" {
      driver = "docker"

      config {
        image        = "{{ $dockerImage }}:{{ $dockerTag }}"
        network_mode = "host"

        volumes = [
          "local/traefik.toml:/etc/traefik/traefik.toml",
        ]
      }

      template {
        source      = "{{ $source }}"
        destination = "{{ $destination }}"
      }

      resources {
        cpu    = {{ $cpu }}
        memory = {{ $mem }}
      }
    }
  }
}